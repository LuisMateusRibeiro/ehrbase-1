/*
 * This file is generated by jOOQ.
 */
package org.ehrbase.jooq.pg.routines;


import java.util.UUID;

import javax.annotation.processing.Generated;

import org.ehrbase.jooq.pg.Ehr;
import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MigrationAuditCommitter extends AbstractRoutine<UUID> {

    private static final long serialVersionUID = -1445858885;

    /**
     * The parameter <code>ehr.migration_audit_committer.RETURN_VALUE</code>.
     */
    public static final Parameter<UUID> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.UUID, false, false);

    /**
     * The parameter <code>ehr.migration_audit_committer.committer</code>.
     */
    public static final Parameter<UUID> COMMITTER = Internal.createParameter("committer", org.jooq.impl.SQLDataType.UUID, false, false);

    /**
     * Create a new routine call instance
     */
    public MigrationAuditCommitter() {
        super("migration_audit_committer", Ehr.EHR, org.jooq.impl.SQLDataType.UUID);

        setReturnParameter(RETURN_VALUE);
        addInParameter(COMMITTER);
    }

    /**
     * Set the <code>committer</code> parameter IN value to the routine
     */
    public void setCommitter(UUID value) {
        setValue(COMMITTER, value);
    }

    /**
     * Set the <code>committer</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setCommitter(Field<UUID> field) {
        setField(COMMITTER, field);
    }
}
