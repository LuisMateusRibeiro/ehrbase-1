/*
 * This file is generated by jOOQ.
 */
package org.ehrbase.jooq.pg.tables;


import java.util.UUID;

import org.ehrbase.jooq.pg.Ehr;
import org.ehrbase.jooq.pg.tables.records.AdminDeleteFolderObjRefHistoryRecord;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row1;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminDeleteFolderObjRefHistory extends TableImpl<AdminDeleteFolderObjRefHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>ehr.admin_delete_folder_obj_ref_history</code>
     */
    public static final AdminDeleteFolderObjRefHistory ADMIN_DELETE_FOLDER_OBJ_REF_HISTORY = new AdminDeleteFolderObjRefHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdminDeleteFolderObjRefHistoryRecord> getRecordType() {
        return AdminDeleteFolderObjRefHistoryRecord.class;
    }

    /**
     * The column <code>ehr.admin_delete_folder_obj_ref_history.num</code>.
     */
    public final TableField<AdminDeleteFolderObjRefHistoryRecord, Integer> NUM = createField(DSL.name("num"), SQLDataType.INTEGER, this, "");

    private AdminDeleteFolderObjRefHistory(Name alias, Table<AdminDeleteFolderObjRefHistoryRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.UUID)
        });
    }

    private AdminDeleteFolderObjRefHistory(Name alias, Table<AdminDeleteFolderObjRefHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased <code>ehr.admin_delete_folder_obj_ref_history</code>
     * table reference
     */
    public AdminDeleteFolderObjRefHistory(String alias) {
        this(DSL.name(alias), ADMIN_DELETE_FOLDER_OBJ_REF_HISTORY);
    }

    /**
     * Create an aliased <code>ehr.admin_delete_folder_obj_ref_history</code>
     * table reference
     */
    public AdminDeleteFolderObjRefHistory(Name alias) {
        this(alias, ADMIN_DELETE_FOLDER_OBJ_REF_HISTORY);
    }

    /**
     * Create a <code>ehr.admin_delete_folder_obj_ref_history</code> table
     * reference
     */
    public AdminDeleteFolderObjRefHistory() {
        this(DSL.name("admin_delete_folder_obj_ref_history"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Ehr.EHR;
    }

    @Override
    public AdminDeleteFolderObjRefHistory as(String alias) {
        return new AdminDeleteFolderObjRefHistory(DSL.name(alias), this, parameters);
    }

    @Override
    public AdminDeleteFolderObjRefHistory as(Name alias) {
        return new AdminDeleteFolderObjRefHistory(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminDeleteFolderObjRefHistory rename(String name) {
        return new AdminDeleteFolderObjRefHistory(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminDeleteFolderObjRefHistory rename(Name name) {
        return new AdminDeleteFolderObjRefHistory(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row1 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row1<Integer> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public AdminDeleteFolderObjRefHistory call(
          UUID contributionIdInput
    ) {
        AdminDeleteFolderObjRefHistory result = new AdminDeleteFolderObjRefHistory(DSL.name("admin_delete_folder_obj_ref_history"), null, new Field[] {
            DSL.val(contributionIdInput, SQLDataType.UUID)
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public AdminDeleteFolderObjRefHistory call(
          Field<UUID> contributionIdInput
    ) {
        AdminDeleteFolderObjRefHistory result = new AdminDeleteFolderObjRefHistory(DSL.name("admin_delete_folder_obj_ref_history"), null, new Field[] {
            contributionIdInput
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
