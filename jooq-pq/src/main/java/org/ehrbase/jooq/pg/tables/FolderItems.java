/*
 * This file is generated by jOOQ.
 */
package org.ehrbase.jooq.pg.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.ehrbase.jooq.binding.SysPeriodBinder;
import org.ehrbase.jooq.pg.Ehr;
import org.ehrbase.jooq.pg.Indexes;
import org.ehrbase.jooq.pg.Keys;
import org.ehrbase.jooq.pg.tables.records.FolderItemsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FolderItems extends TableImpl<FolderItemsRecord> {

    private static final long serialVersionUID = 419995382;

    /**
     * The reference instance of <code>ehr.folder_items</code>
     */
    public static final FolderItems FOLDER_ITEMS = new FolderItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FolderItemsRecord> getRecordType() {
        return FolderItemsRecord.class;
    }

    /**
     * The column <code>ehr.folder_items.folder_id</code>.
     */
    public final TableField<FolderItemsRecord, UUID> FOLDER_ID = createField(DSL.name("folder_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>ehr.folder_items.object_ref_id</code>.
     */
    public final TableField<FolderItemsRecord, UUID> OBJECT_REF_ID = createField(DSL.name("object_ref_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>ehr.folder_items.in_contribution</code>.
     */
    public final TableField<FolderItemsRecord, UUID> IN_CONTRIBUTION = createField(DSL.name("in_contribution"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>ehr.folder_items.sys_transaction</code>.
     */
    public final TableField<FolderItemsRecord, Timestamp> SYS_TRANSACTION = createField(DSL.name("sys_transaction"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ehr.folder_items.sys_period</code>.
     */
    public final TableField<FolderItemsRecord, java.util.AbstractMap.SimpleEntry<java.time.OffsetDateTime,
                                        java.time.OffsetDateTime>> SYS_PERIOD = createField(DSL.name("sys_period"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"tstzrange\"").nullable(false), this, "", new SysPeriodBinder());

    /**
     * Create a <code>ehr.folder_items</code> table reference
     */
    public FolderItems() {
        this(DSL.name("folder_items"), null);
    }

    /**
     * Create an aliased <code>ehr.folder_items</code> table reference
     */
    public FolderItems(String alias) {
        this(DSL.name(alias), FOLDER_ITEMS);
    }

    /**
     * Create an aliased <code>ehr.folder_items</code> table reference
     */
    public FolderItems(Name alias) {
        this(alias, FOLDER_ITEMS);
    }

    private FolderItems(Name alias, Table<FolderItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FolderItems(Name alias, Table<FolderItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FolderItems(Table<O> child, ForeignKey<O, FolderItemsRecord> key) {
        super(child, key, FOLDER_ITEMS);
    }

    @Override
    public Schema getSchema() {
        return Ehr.EHR;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FOLDER_ITEMS_CONTRIBUTION_IDX, Indexes.FOLDER_ITEMS_PKEY);
    }

    @Override
    public UniqueKey<FolderItemsRecord> getPrimaryKey() {
        return Keys.FOLDER_ITEMS_PKEY;
    }

    @Override
    public List<UniqueKey<FolderItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<FolderItemsRecord>>asList(Keys.FOLDER_ITEMS_PKEY);
    }

    @Override
    public List<ForeignKey<FolderItemsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FolderItemsRecord, ?>>asList(Keys.FOLDER_ITEMS__FOLDER_ITEMS_FOLDER_FKEY, Keys.FOLDER_ITEMS__FOLDER_ITEMS_OBJ_REF_FKEY, Keys.FOLDER_ITEMS__FOLDER_ITEMS_IN_CONTRIBUTION_FKEY);
    }

    public Folder folder() {
        return new Folder(this, Keys.FOLDER_ITEMS__FOLDER_ITEMS_FOLDER_FKEY);
    }

    public ObjectRef objectRef() {
        return new ObjectRef(this, Keys.FOLDER_ITEMS__FOLDER_ITEMS_OBJ_REF_FKEY);
    }

    public Contribution contribution() {
        return new Contribution(this, Keys.FOLDER_ITEMS__FOLDER_ITEMS_IN_CONTRIBUTION_FKEY);
    }

    @Override
    public FolderItems as(String alias) {
        return new FolderItems(DSL.name(alias), this);
    }

    @Override
    public FolderItems as(Name alias) {
        return new FolderItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FolderItems rename(String name) {
        return new FolderItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FolderItems rename(Name name) {
        return new FolderItems(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, Timestamp, java.util.AbstractMap.SimpleEntry<java.time.OffsetDateTime,
                                        java.time.OffsetDateTime>> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
