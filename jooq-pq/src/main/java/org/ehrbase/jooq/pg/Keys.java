/*
 * This file is generated by jOOQ.
 */
package org.ehrbase.jooq.pg;


import javax.annotation.processing.Generated;

import org.ehrbase.jooq.pg.tables.Access;
import org.ehrbase.jooq.pg.tables.Attestation;
import org.ehrbase.jooq.pg.tables.AttestationRef;
import org.ehrbase.jooq.pg.tables.AttestedView;
import org.ehrbase.jooq.pg.tables.AuditDetails;
import org.ehrbase.jooq.pg.tables.Composition;
import org.ehrbase.jooq.pg.tables.Concept;
import org.ehrbase.jooq.pg.tables.Contribution;
import org.ehrbase.jooq.pg.tables.Ehr;
import org.ehrbase.jooq.pg.tables.Entry;
import org.ehrbase.jooq.pg.tables.EventContext;
import org.ehrbase.jooq.pg.tables.FlywaySchemaHistory;
import org.ehrbase.jooq.pg.tables.Folder;
import org.ehrbase.jooq.pg.tables.FolderHierarchy;
import org.ehrbase.jooq.pg.tables.FolderHierarchyHistory;
import org.ehrbase.jooq.pg.tables.FolderHistory;
import org.ehrbase.jooq.pg.tables.FolderItems;
import org.ehrbase.jooq.pg.tables.FolderItemsHistory;
import org.ehrbase.jooq.pg.tables.Heading;
import org.ehrbase.jooq.pg.tables.Identifier;
import org.ehrbase.jooq.pg.tables.Language;
import org.ehrbase.jooq.pg.tables.ObjectRef;
import org.ehrbase.jooq.pg.tables.ObjectRefHistory;
import org.ehrbase.jooq.pg.tables.Participation;
import org.ehrbase.jooq.pg.tables.PartyIdentified;
import org.ehrbase.jooq.pg.tables.SessionLog;
import org.ehrbase.jooq.pg.tables.Status;
import org.ehrbase.jooq.pg.tables.StoredQuery;
import org.ehrbase.jooq.pg.tables.System;
import org.ehrbase.jooq.pg.tables.TemplateStore;
import org.ehrbase.jooq.pg.tables.TerminologyProvider;
import org.ehrbase.jooq.pg.tables.Territory;
import org.ehrbase.jooq.pg.tables.records.AccessRecord;
import org.ehrbase.jooq.pg.tables.records.AttestationRecord;
import org.ehrbase.jooq.pg.tables.records.AttestationRefRecord;
import org.ehrbase.jooq.pg.tables.records.AttestedViewRecord;
import org.ehrbase.jooq.pg.tables.records.AuditDetailsRecord;
import org.ehrbase.jooq.pg.tables.records.CompositionRecord;
import org.ehrbase.jooq.pg.tables.records.ConceptRecord;
import org.ehrbase.jooq.pg.tables.records.ContributionRecord;
import org.ehrbase.jooq.pg.tables.records.EhrRecord;
import org.ehrbase.jooq.pg.tables.records.EntryRecord;
import org.ehrbase.jooq.pg.tables.records.EventContextRecord;
import org.ehrbase.jooq.pg.tables.records.FlywaySchemaHistoryRecord;
import org.ehrbase.jooq.pg.tables.records.FolderHierarchyHistoryRecord;
import org.ehrbase.jooq.pg.tables.records.FolderHierarchyRecord;
import org.ehrbase.jooq.pg.tables.records.FolderHistoryRecord;
import org.ehrbase.jooq.pg.tables.records.FolderItemsHistoryRecord;
import org.ehrbase.jooq.pg.tables.records.FolderItemsRecord;
import org.ehrbase.jooq.pg.tables.records.FolderRecord;
import org.ehrbase.jooq.pg.tables.records.HeadingRecord;
import org.ehrbase.jooq.pg.tables.records.IdentifierRecord;
import org.ehrbase.jooq.pg.tables.records.LanguageRecord;
import org.ehrbase.jooq.pg.tables.records.ObjectRefHistoryRecord;
import org.ehrbase.jooq.pg.tables.records.ObjectRefRecord;
import org.ehrbase.jooq.pg.tables.records.ParticipationRecord;
import org.ehrbase.jooq.pg.tables.records.PartyIdentifiedRecord;
import org.ehrbase.jooq.pg.tables.records.SessionLogRecord;
import org.ehrbase.jooq.pg.tables.records.StatusRecord;
import org.ehrbase.jooq.pg.tables.records.StoredQueryRecord;
import org.ehrbase.jooq.pg.tables.records.SystemRecord;
import org.ehrbase.jooq.pg.tables.records.TemplateStoreRecord;
import org.ehrbase.jooq.pg.tables.records.TerminologyProviderRecord;
import org.ehrbase.jooq.pg.tables.records.TerritoryRecord;
import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>ehr</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessRecord> ACCESS_PKEY = UniqueKeys0.ACCESS_PKEY;
    public static final UniqueKey<AttestationRecord> ATTESTATION_PKEY = UniqueKeys0.ATTESTATION_PKEY;
    public static final UniqueKey<AttestationRefRecord> ATTESTATION_REF_PKEY = UniqueKeys0.ATTESTATION_REF_PKEY;
    public static final UniqueKey<AttestedViewRecord> ATTESTED_VIEW_PKEY = UniqueKeys0.ATTESTED_VIEW_PKEY;
    public static final UniqueKey<AuditDetailsRecord> AUDIT_DETAILS_PKEY = UniqueKeys0.AUDIT_DETAILS_PKEY;
    public static final UniqueKey<CompositionRecord> COMPOSITION_PKEY = UniqueKeys0.COMPOSITION_PKEY;
    public static final UniqueKey<ConceptRecord> CONCEPT_PKEY = UniqueKeys0.CONCEPT_PKEY;
    public static final UniqueKey<ContributionRecord> CONTRIBUTION_PKEY = UniqueKeys0.CONTRIBUTION_PKEY;
    public static final UniqueKey<EhrRecord> EHR_PKEY = UniqueKeys0.EHR_PKEY;
    public static final UniqueKey<EntryRecord> ENTRY_PKEY = UniqueKeys0.ENTRY_PKEY;
    public static final UniqueKey<EventContextRecord> EVENT_CONTEXT_PKEY = UniqueKeys0.EVENT_CONTEXT_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<FolderRecord> FOLDER_PK = UniqueKeys0.FOLDER_PK;
    public static final UniqueKey<FolderHierarchyRecord> FOLDER_HIERARCHY_PKEY = UniqueKeys0.FOLDER_HIERARCHY_PKEY;
    public static final UniqueKey<FolderHierarchyRecord> UQ_FOLDERHIERARCHY_PARENT_CHILD = UniqueKeys0.UQ_FOLDERHIERARCHY_PARENT_CHILD;
    public static final UniqueKey<FolderHierarchyHistoryRecord> FOLDER_HIERARCHY_HISTORY_PKEY = UniqueKeys0.FOLDER_HIERARCHY_HISTORY_PKEY;
    public static final UniqueKey<FolderHistoryRecord> FOLDER_HISTORY_PKEY = UniqueKeys0.FOLDER_HISTORY_PKEY;
    public static final UniqueKey<FolderItemsRecord> FOLDER_ITEMS_PKEY = UniqueKeys0.FOLDER_ITEMS_PKEY;
    public static final UniqueKey<FolderItemsHistoryRecord> FOLDER_ITEMS_HIST_PKEY = UniqueKeys0.FOLDER_ITEMS_HIST_PKEY;
    public static final UniqueKey<HeadingRecord> HEADING_PKEY = UniqueKeys0.HEADING_PKEY;
    public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = UniqueKeys0.LANGUAGE_PKEY;
    public static final UniqueKey<ObjectRefRecord> OBJECT_REF_PKEY = UniqueKeys0.OBJECT_REF_PKEY;
    public static final UniqueKey<ObjectRefHistoryRecord> OBJECT_REF_HIST_PKEY = UniqueKeys0.OBJECT_REF_HIST_PKEY;
    public static final UniqueKey<ParticipationRecord> PARTICIPATION_PKEY = UniqueKeys0.PARTICIPATION_PKEY;
    public static final UniqueKey<PartyIdentifiedRecord> PARTY_IDENTIFIED_PKEY = UniqueKeys0.PARTY_IDENTIFIED_PKEY;
    public static final UniqueKey<SessionLogRecord> SESSION_LOG_PKEY = UniqueKeys0.SESSION_LOG_PKEY;
    public static final UniqueKey<StatusRecord> STATUS_PKEY = UniqueKeys0.STATUS_PKEY;
    public static final UniqueKey<StoredQueryRecord> PK_QUALIFIED_NAME = UniqueKeys0.PK_QUALIFIED_NAME;
    public static final UniqueKey<SystemRecord> SYSTEM_PKEY = UniqueKeys0.SYSTEM_PKEY;
    public static final UniqueKey<TemplateStoreRecord> TEMPLATE_STORE_PKEY = UniqueKeys0.TEMPLATE_STORE_PKEY;
    public static final UniqueKey<TerminologyProviderRecord> TERMINOLOGY_PROVIDER_PKEY = UniqueKeys0.TERMINOLOGY_PROVIDER_PKEY;
    public static final UniqueKey<TerritoryRecord> TERRITORY_PKEY = UniqueKeys0.TERRITORY_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AttestationRecord, AuditDetailsRecord> ATTESTATION__ATTESTATION_HAS_AUDIT_FKEY = ForeignKeys0.ATTESTATION__ATTESTATION_HAS_AUDIT_FKEY;
    public static final ForeignKey<AttestationRecord, AttestationRefRecord> ATTESTATION__ATTESTATION_REFERENCE_FKEY = ForeignKeys0.ATTESTATION__ATTESTATION_REFERENCE_FKEY;
    public static final ForeignKey<AttestedViewRecord, AttestationRecord> ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY = ForeignKeys0.ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY;
    public static final ForeignKey<AuditDetailsRecord, SystemRecord> AUDIT_DETAILS__AUDIT_DETAILS_SYSTEM_ID_FKEY = ForeignKeys0.AUDIT_DETAILS__AUDIT_DETAILS_SYSTEM_ID_FKEY;
    public static final ForeignKey<AuditDetailsRecord, PartyIdentifiedRecord> AUDIT_DETAILS__AUDIT_DETAILS_COMMITTER_FKEY = ForeignKeys0.AUDIT_DETAILS__AUDIT_DETAILS_COMMITTER_FKEY;
    public static final ForeignKey<CompositionRecord, EhrRecord> COMPOSITION__COMPOSITION_EHR_ID_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_EHR_ID_FKEY;
    public static final ForeignKey<CompositionRecord, ContributionRecord> COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY;
    public static final ForeignKey<CompositionRecord, LanguageRecord> COMPOSITION__COMPOSITION_LANGUAGE_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_LANGUAGE_FKEY;
    public static final ForeignKey<CompositionRecord, TerritoryRecord> COMPOSITION__COMPOSITION_TERRITORY_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_TERRITORY_FKEY;
    public static final ForeignKey<CompositionRecord, PartyIdentifiedRecord> COMPOSITION__COMPOSITION_COMPOSER_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_COMPOSER_FKEY;
    public static final ForeignKey<CompositionRecord, AuditDetailsRecord> COMPOSITION__COMPOSITION_HAS_AUDIT_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_HAS_AUDIT_FKEY;
    public static final ForeignKey<CompositionRecord, AttestationRefRecord> COMPOSITION__COMPOSITION_ATTESTATION_REF_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_ATTESTATION_REF_FKEY;
    public static final ForeignKey<ConceptRecord, LanguageRecord> CONCEPT__CONCEPT_LANGUAGE_FKEY = ForeignKeys0.CONCEPT__CONCEPT_LANGUAGE_FKEY;
    public static final ForeignKey<ContributionRecord, EhrRecord> CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY = ForeignKeys0.CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY;
    public static final ForeignKey<ContributionRecord, AuditDetailsRecord> CONTRIBUTION__CONTRIBUTION_HAS_AUDIT_FKEY = ForeignKeys0.CONTRIBUTION__CONTRIBUTION_HAS_AUDIT_FKEY;
    public static final ForeignKey<EhrRecord, AccessRecord> EHR__EHR_ACCESS_FKEY = ForeignKeys0.EHR__EHR_ACCESS_FKEY;
    public static final ForeignKey<EhrRecord, SystemRecord> EHR__EHR_SYSTEM_ID_FKEY = ForeignKeys0.EHR__EHR_SYSTEM_ID_FKEY;
    public static final ForeignKey<EhrRecord, FolderRecord> EHR__EHR_DIRECTORY_FKEY = ForeignKeys0.EHR__EHR_DIRECTORY_FKEY;
    public static final ForeignKey<EntryRecord, CompositionRecord> ENTRY__ENTRY_COMPOSITION_ID_FKEY = ForeignKeys0.ENTRY__ENTRY_COMPOSITION_ID_FKEY;
    public static final ForeignKey<EventContextRecord, CompositionRecord> EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY = ForeignKeys0.EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY;
    public static final ForeignKey<EventContextRecord, PartyIdentifiedRecord> EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY = ForeignKeys0.EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY;
    public static final ForeignKey<FolderRecord, ContributionRecord> FOLDER__FOLDER_IN_CONTRIBUTION_FKEY = ForeignKeys0.FOLDER__FOLDER_IN_CONTRIBUTION_FKEY;
    public static final ForeignKey<FolderRecord, AuditDetailsRecord> FOLDER__FOLDER_HAS_AUDIT_FKEY = ForeignKeys0.FOLDER__FOLDER_HAS_AUDIT_FKEY;
    public static final ForeignKey<FolderHierarchyRecord, FolderRecord> FOLDER_HIERARCHY__FOLDER_HIERARCHY_PARENT_FK = ForeignKeys0.FOLDER_HIERARCHY__FOLDER_HIERARCHY_PARENT_FK;
    public static final ForeignKey<FolderHierarchyRecord, ContributionRecord> FOLDER_HIERARCHY__FOLDER_HIERARCHY_IN_CONTRIBUTION_FK = ForeignKeys0.FOLDER_HIERARCHY__FOLDER_HIERARCHY_IN_CONTRIBUTION_FK;
    public static final ForeignKey<FolderItemsRecord, FolderRecord> FOLDER_ITEMS__FOLDER_ITEMS_FOLDER_FKEY = ForeignKeys0.FOLDER_ITEMS__FOLDER_ITEMS_FOLDER_FKEY;
    public static final ForeignKey<FolderItemsRecord, ObjectRefRecord> FOLDER_ITEMS__FOLDER_ITEMS_OBJ_REF_FKEY = ForeignKeys0.FOLDER_ITEMS__FOLDER_ITEMS_OBJ_REF_FKEY;
    public static final ForeignKey<FolderItemsRecord, ContributionRecord> FOLDER_ITEMS__FOLDER_ITEMS_IN_CONTRIBUTION_FKEY = ForeignKeys0.FOLDER_ITEMS__FOLDER_ITEMS_IN_CONTRIBUTION_FKEY;
    public static final ForeignKey<IdentifierRecord, PartyIdentifiedRecord> IDENTIFIER__IDENTIFIER_PARTY_FKEY = ForeignKeys0.IDENTIFIER__IDENTIFIER_PARTY_FKEY;
    public static final ForeignKey<ObjectRefRecord, ContributionRecord> OBJECT_REF__OBJECT_REF_IN_CONTRIBUTION_FKEY = ForeignKeys0.OBJECT_REF__OBJECT_REF_IN_CONTRIBUTION_FKEY;
    public static final ForeignKey<ParticipationRecord, PartyIdentifiedRecord> PARTICIPATION__PARTICIPATION_PERFORMER_FKEY = ForeignKeys0.PARTICIPATION__PARTICIPATION_PERFORMER_FKEY;
    public static final ForeignKey<StatusRecord, EhrRecord> STATUS__STATUS_EHR_ID_FKEY = ForeignKeys0.STATUS__STATUS_EHR_ID_FKEY;
    public static final ForeignKey<StatusRecord, PartyIdentifiedRecord> STATUS__STATUS_PARTY_FKEY = ForeignKeys0.STATUS__STATUS_PARTY_FKEY;
    public static final ForeignKey<StatusRecord, AuditDetailsRecord> STATUS__STATUS_HAS_AUDIT_FKEY = ForeignKeys0.STATUS__STATUS_HAS_AUDIT_FKEY;
    public static final ForeignKey<StatusRecord, AttestationRefRecord> STATUS__STATUS_ATTESTATION_REF_FKEY = ForeignKeys0.STATUS__STATUS_ATTESTATION_REF_FKEY;
    public static final ForeignKey<StatusRecord, ContributionRecord> STATUS__STATUS_IN_CONTRIBUTION_FKEY = ForeignKeys0.STATUS__STATUS_IN_CONTRIBUTION_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AccessRecord> ACCESS_PKEY = Internal.createUniqueKey(Access.ACCESS, "access_pkey", Access.ACCESS.ID);
        public static final UniqueKey<AttestationRecord> ATTESTATION_PKEY = Internal.createUniqueKey(Attestation.ATTESTATION, "attestation_pkey", Attestation.ATTESTATION.ID);
        public static final UniqueKey<AttestationRefRecord> ATTESTATION_REF_PKEY = Internal.createUniqueKey(AttestationRef.ATTESTATION_REF, "attestation_ref_pkey", AttestationRef.ATTESTATION_REF.REF);
        public static final UniqueKey<AttestedViewRecord> ATTESTED_VIEW_PKEY = Internal.createUniqueKey(AttestedView.ATTESTED_VIEW, "attested_view_pkey", AttestedView.ATTESTED_VIEW.ID);
        public static final UniqueKey<AuditDetailsRecord> AUDIT_DETAILS_PKEY = Internal.createUniqueKey(AuditDetails.AUDIT_DETAILS, "audit_details_pkey", AuditDetails.AUDIT_DETAILS.ID);
        public static final UniqueKey<CompositionRecord> COMPOSITION_PKEY = Internal.createUniqueKey(Composition.COMPOSITION, "composition_pkey", Composition.COMPOSITION.ID, Composition.COMPOSITION.EHR_ID);
        public static final UniqueKey<ConceptRecord> CONCEPT_PKEY = Internal.createUniqueKey(Concept.CONCEPT, "concept_pkey", Concept.CONCEPT.ID);
        public static final UniqueKey<ContributionRecord> CONTRIBUTION_PKEY = Internal.createUniqueKey(Contribution.CONTRIBUTION, "contribution_pkey", Contribution.CONTRIBUTION.ID);
        public static final UniqueKey<EhrRecord> EHR_PKEY = Internal.createUniqueKey(Ehr.EHR_, "ehr_pkey", Ehr.EHR_.ID);
        public static final UniqueKey<EntryRecord> ENTRY_PKEY = Internal.createUniqueKey(Entry.ENTRY, "entry_pkey", Entry.ENTRY.ID, Entry.ENTRY.EHR_ID);
        public static final UniqueKey<EventContextRecord> EVENT_CONTEXT_PKEY = Internal.createUniqueKey(EventContext.EVENT_CONTEXT, "event_context_pkey", EventContext.EVENT_CONTEXT.ID, EventContext.EVENT_CONTEXT.EHR_ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<FolderRecord> FOLDER_PK = Internal.createUniqueKey(Folder.FOLDER, "folder_pk", Folder.FOLDER.ID);
        public static final UniqueKey<FolderHierarchyRecord> FOLDER_HIERARCHY_PKEY = Internal.createUniqueKey(FolderHierarchy.FOLDER_HIERARCHY, "folder_hierarchy_pkey", FolderHierarchy.FOLDER_HIERARCHY.PARENT_FOLDER, FolderHierarchy.FOLDER_HIERARCHY.CHILD_FOLDER);
        public static final UniqueKey<FolderHierarchyRecord> UQ_FOLDERHIERARCHY_PARENT_CHILD = Internal.createUniqueKey(FolderHierarchy.FOLDER_HIERARCHY, "uq_folderhierarchy_parent_child", FolderHierarchy.FOLDER_HIERARCHY.PARENT_FOLDER, FolderHierarchy.FOLDER_HIERARCHY.CHILD_FOLDER);
        public static final UniqueKey<FolderHierarchyHistoryRecord> FOLDER_HIERARCHY_HISTORY_PKEY = Internal.createUniqueKey(FolderHierarchyHistory.FOLDER_HIERARCHY_HISTORY, "folder_hierarchy_history_pkey", FolderHierarchyHistory.FOLDER_HIERARCHY_HISTORY.PARENT_FOLDER, FolderHierarchyHistory.FOLDER_HIERARCHY_HISTORY.CHILD_FOLDER, FolderHierarchyHistory.FOLDER_HIERARCHY_HISTORY.IN_CONTRIBUTION);
        public static final UniqueKey<FolderHistoryRecord> FOLDER_HISTORY_PKEY = Internal.createUniqueKey(FolderHistory.FOLDER_HISTORY, "folder_history_pkey", FolderHistory.FOLDER_HISTORY.ID, FolderHistory.FOLDER_HISTORY.IN_CONTRIBUTION);
        public static final UniqueKey<FolderItemsRecord> FOLDER_ITEMS_PKEY = Internal.createUniqueKey(FolderItems.FOLDER_ITEMS, "folder_items_pkey", FolderItems.FOLDER_ITEMS.FOLDER_ID, FolderItems.FOLDER_ITEMS.OBJECT_REF_ID, FolderItems.FOLDER_ITEMS.IN_CONTRIBUTION);
        public static final UniqueKey<FolderItemsHistoryRecord> FOLDER_ITEMS_HIST_PKEY = Internal.createUniqueKey(FolderItemsHistory.FOLDER_ITEMS_HISTORY, "folder_items_hist_pkey", FolderItemsHistory.FOLDER_ITEMS_HISTORY.FOLDER_ID, FolderItemsHistory.FOLDER_ITEMS_HISTORY.OBJECT_REF_ID, FolderItemsHistory.FOLDER_ITEMS_HISTORY.IN_CONTRIBUTION);
        public static final UniqueKey<HeadingRecord> HEADING_PKEY = Internal.createUniqueKey(Heading.HEADING, "heading_pkey", Heading.HEADING.CODE);
        public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = Internal.createUniqueKey(Language.LANGUAGE, "language_pkey", Language.LANGUAGE.CODE);
        public static final UniqueKey<ObjectRefRecord> OBJECT_REF_PKEY = Internal.createUniqueKey(ObjectRef.OBJECT_REF, "object_ref_pkey", ObjectRef.OBJECT_REF.ID, ObjectRef.OBJECT_REF.IN_CONTRIBUTION);
        public static final UniqueKey<ObjectRefHistoryRecord> OBJECT_REF_HIST_PKEY = Internal.createUniqueKey(ObjectRefHistory.OBJECT_REF_HISTORY, "object_ref_hist_pkey", ObjectRefHistory.OBJECT_REF_HISTORY.ID, ObjectRefHistory.OBJECT_REF_HISTORY.IN_CONTRIBUTION);
        public static final UniqueKey<ParticipationRecord> PARTICIPATION_PKEY = Internal.createUniqueKey(Participation.PARTICIPATION, "participation_pkey", Participation.PARTICIPATION.ID);
        public static final UniqueKey<PartyIdentifiedRecord> PARTY_IDENTIFIED_PKEY = Internal.createUniqueKey(PartyIdentified.PARTY_IDENTIFIED, "party_identified_pkey", PartyIdentified.PARTY_IDENTIFIED.ID);
        public static final UniqueKey<SessionLogRecord> SESSION_LOG_PKEY = Internal.createUniqueKey(SessionLog.SESSION_LOG, "session_log_pkey", SessionLog.SESSION_LOG.ID);
        public static final UniqueKey<StatusRecord> STATUS_PKEY = Internal.createUniqueKey(Status.STATUS, "status_pkey", Status.STATUS.ID, Status.STATUS.EHR_ID);
        public static final UniqueKey<StoredQueryRecord> PK_QUALIFIED_NAME = Internal.createUniqueKey(StoredQuery.STORED_QUERY, "pk_qualified_name", StoredQuery.STORED_QUERY.REVERSE_DOMAIN_NAME, StoredQuery.STORED_QUERY.SEMANTIC_ID, StoredQuery.STORED_QUERY.SEMVER);
        public static final UniqueKey<SystemRecord> SYSTEM_PKEY = Internal.createUniqueKey(System.SYSTEM, "system_pkey", System.SYSTEM.ID);
        public static final UniqueKey<TemplateStoreRecord> TEMPLATE_STORE_PKEY = Internal.createUniqueKey(TemplateStore.TEMPLATE_STORE, "template_store_pkey", TemplateStore.TEMPLATE_STORE.ID);
        public static final UniqueKey<TerminologyProviderRecord> TERMINOLOGY_PROVIDER_PKEY = Internal.createUniqueKey(TerminologyProvider.TERMINOLOGY_PROVIDER, "terminology_provider_pkey", TerminologyProvider.TERMINOLOGY_PROVIDER.CODE);
        public static final UniqueKey<TerritoryRecord> TERRITORY_PKEY = Internal.createUniqueKey(Territory.TERRITORY, "territory_pkey", Territory.TERRITORY.CODE);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AttestationRecord, AuditDetailsRecord> ATTESTATION__ATTESTATION_HAS_AUDIT_FKEY = Internal.createForeignKey(Keys.AUDIT_DETAILS_PKEY, Attestation.ATTESTATION, "attestation__attestation_has_audit_fkey", Attestation.ATTESTATION.HAS_AUDIT);
        public static final ForeignKey<AttestationRecord, AttestationRefRecord> ATTESTATION__ATTESTATION_REFERENCE_FKEY = Internal.createForeignKey(Keys.ATTESTATION_REF_PKEY, Attestation.ATTESTATION, "attestation__attestation_reference_fkey", Attestation.ATTESTATION.REFERENCE);
        public static final ForeignKey<AttestedViewRecord, AttestationRecord> ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY = Internal.createForeignKey(Keys.ATTESTATION_PKEY, AttestedView.ATTESTED_VIEW, "attested_view__attested_view_attestation_id_fkey", AttestedView.ATTESTED_VIEW.ATTESTATION_ID);
        public static final ForeignKey<AuditDetailsRecord, SystemRecord> AUDIT_DETAILS__AUDIT_DETAILS_SYSTEM_ID_FKEY = Internal.createForeignKey(Keys.SYSTEM_PKEY, AuditDetails.AUDIT_DETAILS, "audit_details__audit_details_system_id_fkey", AuditDetails.AUDIT_DETAILS.SYSTEM_ID);
        public static final ForeignKey<AuditDetailsRecord, PartyIdentifiedRecord> AUDIT_DETAILS__AUDIT_DETAILS_COMMITTER_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, AuditDetails.AUDIT_DETAILS, "audit_details__audit_details_committer_fkey", AuditDetails.AUDIT_DETAILS.COMMITTER);
        public static final ForeignKey<CompositionRecord, EhrRecord> COMPOSITION__COMPOSITION_EHR_ID_FKEY = Internal.createForeignKey(Keys.EHR_PKEY, Composition.COMPOSITION, "composition__composition_ehr_id_fkey", Composition.COMPOSITION.EHR_ID);
        public static final ForeignKey<CompositionRecord, ContributionRecord> COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, Composition.COMPOSITION, "composition__composition_in_contribution_fkey", Composition.COMPOSITION.IN_CONTRIBUTION);
        public static final ForeignKey<CompositionRecord, LanguageRecord> COMPOSITION__COMPOSITION_LANGUAGE_FKEY = Internal.createForeignKey(Keys.LANGUAGE_PKEY, Composition.COMPOSITION, "composition__composition_language_fkey", Composition.COMPOSITION.LANGUAGE);
        public static final ForeignKey<CompositionRecord, TerritoryRecord> COMPOSITION__COMPOSITION_TERRITORY_FKEY = Internal.createForeignKey(Keys.TERRITORY_PKEY, Composition.COMPOSITION, "composition__composition_territory_fkey", Composition.COMPOSITION.TERRITORY);
        public static final ForeignKey<CompositionRecord, PartyIdentifiedRecord> COMPOSITION__COMPOSITION_COMPOSER_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, Composition.COMPOSITION, "composition__composition_composer_fkey", Composition.COMPOSITION.COMPOSER);
        public static final ForeignKey<CompositionRecord, AuditDetailsRecord> COMPOSITION__COMPOSITION_HAS_AUDIT_FKEY = Internal.createForeignKey(Keys.AUDIT_DETAILS_PKEY, Composition.COMPOSITION, "composition__composition_has_audit_fkey", Composition.COMPOSITION.HAS_AUDIT);
        public static final ForeignKey<CompositionRecord, AttestationRefRecord> COMPOSITION__COMPOSITION_ATTESTATION_REF_FKEY = Internal.createForeignKey(Keys.ATTESTATION_REF_PKEY, Composition.COMPOSITION, "composition__composition_attestation_ref_fkey", Composition.COMPOSITION.ATTESTATION_REF);
        public static final ForeignKey<ConceptRecord, LanguageRecord> CONCEPT__CONCEPT_LANGUAGE_FKEY = Internal.createForeignKey(Keys.LANGUAGE_PKEY, Concept.CONCEPT, "concept__concept_language_fkey", Concept.CONCEPT.LANGUAGE);
        public static final ForeignKey<ContributionRecord, EhrRecord> CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY = Internal.createForeignKey(Keys.EHR_PKEY, Contribution.CONTRIBUTION, "contribution__contribution_ehr_id_fkey", Contribution.CONTRIBUTION.EHR_ID);
        public static final ForeignKey<ContributionRecord, AuditDetailsRecord> CONTRIBUTION__CONTRIBUTION_HAS_AUDIT_FKEY = Internal.createForeignKey(Keys.AUDIT_DETAILS_PKEY, Contribution.CONTRIBUTION, "contribution__contribution_has_audit_fkey", Contribution.CONTRIBUTION.HAS_AUDIT);
        public static final ForeignKey<EhrRecord, AccessRecord> EHR__EHR_ACCESS_FKEY = Internal.createForeignKey(Keys.ACCESS_PKEY, Ehr.EHR_, "ehr__ehr_access_fkey", Ehr.EHR_.ACCESS);
        public static final ForeignKey<EhrRecord, SystemRecord> EHR__EHR_SYSTEM_ID_FKEY = Internal.createForeignKey(Keys.SYSTEM_PKEY, Ehr.EHR_, "ehr__ehr_system_id_fkey", Ehr.EHR_.SYSTEM_ID);
        public static final ForeignKey<EhrRecord, FolderRecord> EHR__EHR_DIRECTORY_FKEY = Internal.createForeignKey(Keys.FOLDER_PK, Ehr.EHR_, "ehr__ehr_directory_fkey", Ehr.EHR_.DIRECTORY);
        public static final ForeignKey<EntryRecord, CompositionRecord> ENTRY__ENTRY_COMPOSITION_ID_FKEY = Internal.createForeignKey(Keys.COMPOSITION_PKEY, Entry.ENTRY, "entry__entry_composition_id_fkey", Entry.ENTRY.COMPOSITION_ID, Entry.ENTRY.EHR_ID);
        public static final ForeignKey<EventContextRecord, CompositionRecord> EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY = Internal.createForeignKey(Keys.COMPOSITION_PKEY, EventContext.EVENT_CONTEXT, "event_context__event_context_composition_id_fkey", EventContext.EVENT_CONTEXT.COMPOSITION_ID, EventContext.EVENT_CONTEXT.EHR_ID);
        public static final ForeignKey<EventContextRecord, PartyIdentifiedRecord> EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, EventContext.EVENT_CONTEXT, "event_context__event_context_facility_fkey", EventContext.EVENT_CONTEXT.FACILITY);
        public static final ForeignKey<FolderRecord, ContributionRecord> FOLDER__FOLDER_IN_CONTRIBUTION_FKEY = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, Folder.FOLDER, "folder__folder_in_contribution_fkey", Folder.FOLDER.IN_CONTRIBUTION);
        public static final ForeignKey<FolderRecord, AuditDetailsRecord> FOLDER__FOLDER_HAS_AUDIT_FKEY = Internal.createForeignKey(Keys.AUDIT_DETAILS_PKEY, Folder.FOLDER, "folder__folder_has_audit_fkey", Folder.FOLDER.HAS_AUDIT);
        public static final ForeignKey<FolderHierarchyRecord, FolderRecord> FOLDER_HIERARCHY__FOLDER_HIERARCHY_PARENT_FK = Internal.createForeignKey(Keys.FOLDER_PK, FolderHierarchy.FOLDER_HIERARCHY, "folder_hierarchy__folder_hierarchy_parent_fk", FolderHierarchy.FOLDER_HIERARCHY.PARENT_FOLDER);
        public static final ForeignKey<FolderHierarchyRecord, ContributionRecord> FOLDER_HIERARCHY__FOLDER_HIERARCHY_IN_CONTRIBUTION_FK = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, FolderHierarchy.FOLDER_HIERARCHY, "folder_hierarchy__folder_hierarchy_in_contribution_fk", FolderHierarchy.FOLDER_HIERARCHY.IN_CONTRIBUTION);
        public static final ForeignKey<FolderItemsRecord, FolderRecord> FOLDER_ITEMS__FOLDER_ITEMS_FOLDER_FKEY = Internal.createForeignKey(Keys.FOLDER_PK, FolderItems.FOLDER_ITEMS, "folder_items__folder_items_folder_fkey", FolderItems.FOLDER_ITEMS.FOLDER_ID);
        public static final ForeignKey<FolderItemsRecord, ObjectRefRecord> FOLDER_ITEMS__FOLDER_ITEMS_OBJ_REF_FKEY = Internal.createForeignKey(Keys.OBJECT_REF_PKEY, FolderItems.FOLDER_ITEMS, "folder_items__folder_items_obj_ref_fkey", FolderItems.FOLDER_ITEMS.IN_CONTRIBUTION, FolderItems.FOLDER_ITEMS.OBJECT_REF_ID);
        public static final ForeignKey<FolderItemsRecord, ContributionRecord> FOLDER_ITEMS__FOLDER_ITEMS_IN_CONTRIBUTION_FKEY = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, FolderItems.FOLDER_ITEMS, "folder_items__folder_items_in_contribution_fkey", FolderItems.FOLDER_ITEMS.IN_CONTRIBUTION);
        public static final ForeignKey<IdentifierRecord, PartyIdentifiedRecord> IDENTIFIER__IDENTIFIER_PARTY_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, Identifier.IDENTIFIER, "identifier__identifier_party_fkey", Identifier.IDENTIFIER.PARTY);
        public static final ForeignKey<ObjectRefRecord, ContributionRecord> OBJECT_REF__OBJECT_REF_IN_CONTRIBUTION_FKEY = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, ObjectRef.OBJECT_REF, "object_ref__object_ref_in_contribution_fkey", ObjectRef.OBJECT_REF.IN_CONTRIBUTION);
        public static final ForeignKey<ParticipationRecord, PartyIdentifiedRecord> PARTICIPATION__PARTICIPATION_PERFORMER_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, Participation.PARTICIPATION, "participation__participation_performer_fkey", Participation.PARTICIPATION.PERFORMER);
        public static final ForeignKey<StatusRecord, EhrRecord> STATUS__STATUS_EHR_ID_FKEY = Internal.createForeignKey(Keys.EHR_PKEY, Status.STATUS, "status__status_ehr_id_fkey", Status.STATUS.EHR_ID);
        public static final ForeignKey<StatusRecord, PartyIdentifiedRecord> STATUS__STATUS_PARTY_FKEY = Internal.createForeignKey(Keys.PARTY_IDENTIFIED_PKEY, Status.STATUS, "status__status_party_fkey", Status.STATUS.PARTY);
        public static final ForeignKey<StatusRecord, AuditDetailsRecord> STATUS__STATUS_HAS_AUDIT_FKEY = Internal.createForeignKey(Keys.AUDIT_DETAILS_PKEY, Status.STATUS, "status__status_has_audit_fkey", Status.STATUS.HAS_AUDIT);
        public static final ForeignKey<StatusRecord, AttestationRefRecord> STATUS__STATUS_ATTESTATION_REF_FKEY = Internal.createForeignKey(Keys.ATTESTATION_REF_PKEY, Status.STATUS, "status__status_attestation_ref_fkey", Status.STATUS.ATTESTATION_REF);
        public static final ForeignKey<StatusRecord, ContributionRecord> STATUS__STATUS_IN_CONTRIBUTION_FKEY = Internal.createForeignKey(Keys.CONTRIBUTION_PKEY, Status.STATUS, "status__status_in_contribution_fkey", Status.STATUS.IN_CONTRIBUTION);
    }
}
